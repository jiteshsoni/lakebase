{
    "databricks": {
        "workspace_url": "https://your-workspace.cloud.databricks.com",
        "workspace_id": "your-workspace-id",
        "personal_access_token": "dapiXXXXXXXX",
        "username": "your.email@company.com"
    },
    "lakebase": {
        "name": "your-database-instance",
        "instance_id": "your-instance-id",
        "host": "your-instance.database.cloud.databricks.com",
        "port": 5432,
        "database": "databricks_postgres"
    },
    "benchmark": {
        "thread_counts": [20, 40, 80, 100],
        "test_duration_seconds": 30,
        "table_rows": 1000000,
        "batch_size": 100000,
        "table_name": "benchmark_test"
    },
    "production_pool": {
        "_comment": "Production-grade connection pool settings based on FastAPI app best practices",
        "pool_size": 20,
        "max_overflow": 50,
        "pool_timeout": 30,
        "command_timeout": 10,
        "pool_recycle_interval": 3000,
        "enable_background_refresh": true,
        "health_check_interval": 300,
        "use_production_pool": true,
        "_pool_size_comment": "Base number of connections to maintain",
        "_max_overflow_comment": "Additional connections beyond pool_size for burst traffic",
        "_pool_timeout_comment": "Seconds to wait for connection from pool",
        "_command_timeout_comment": "Seconds to wait for database commands",
        "_pool_recycle_interval_comment": "Recycle connections after 50 minutes (before 1h token expiry)",
        "_enable_background_refresh_comment": "Enable automatic token refresh every 50 minutes",
        "_health_check_interval_comment": "Health check interval in seconds (5 minutes)",
        "_use_production_pool_comment": "Use ProductionConnectionPool instead of basic StaggeredConnectionPool"
    },
    "performance_tuning": {
        "_comment": "Performance tuning recommendations for different workloads",
        "light_workload": {
            "pool_size": 5,
            "max_overflow": 10,
            "thread_counts": [10, 20, 40]
        },
        "medium_workload": {
            "pool_size": 20,
            "max_overflow": 30,
            "thread_counts": [20, 40, 80, 100]
        },
        "heavy_workload": {
            "pool_size": 50,
            "max_overflow": 100,
            "thread_counts": [50, 100, 200, 300]
        },
        "stress_testing": {
            "pool_size": 100,
            "max_overflow": 200,
            "thread_counts": [100, 200, 500, 1000]
        }
    }
}